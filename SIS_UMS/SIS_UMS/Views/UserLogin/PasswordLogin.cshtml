@model SIS_UMS.Models.User

@{
    ViewData["Title"] = "Login";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <!-- Start of Card -->
            <div class="card">
                <!-- Card Header -->
                <div class="card-header bg-info text-white">
                    <!-- Title of the Card -->
                    <h3 class="card-title">Password</h3>
                </div>

                <!-- Form for User Login -->
                <div class="form-horizontal">
                    <!-- Validation Summary -->
                    @Html.ValidationSummary()

                    <!-- Card Body -->
                    <div class="card-body">
                        <!-- Form Group for Username Input -->
                        <div class="form-group row">
                            <!-- Validation Summary for Model Errors -->
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <!-- Password Input -->
                            <div class="form-group col-sm-8 ml-4">
                                <!-- Label for Password Input -->
                                <label>Please Enter Your Password:</label>

                                <!-- Password Input Field -->
                                <input type="password" name="user_password" class="form-control mt-3" style="width: 100%;" placeholder="Password" id="passwordInput" required />

                                <!-- Validation Error Message for Username -->
                                <span asp-validation-for="user_password" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <!-- Card Footer -->
                    <div class="card-footer">
                        <!-- Button Group with Back and Next Buttons -->
                        <div class="d-flex justify-content-between">
                            <!-- Back Button Linked to Home/Index -->
                            <a asp-action="UsernameLogin" asp-controller="UserLogin" class="btn btn-secondary px-4">Back</a>

                            <!-- Next Button for Form Submission -->
                            <button type="submit" class="btn btn-success px-4" id="redirectButton">Login</button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- End of Card -->
        </div>
    </div>
</div>

<script>
    // Get a reference to the input password
    const inputElement = document.getElementById('passwordInput');

    // Add an event listener to the input password
    inputElement.addEventListener('keyup', function (event) {
        // Check if the key pressed is Enter (key code 13)
        if (event.key === 'Enter') {
            // Call the Check function here
            Check();
        }
    });

    function Check() {
        // Get the value from the input field
        var password = document.getElementById("passwordInput").value;

        // Extracts the query string from the current URL.
        const queryString = window.location.search;

        // This line Creates a structured representation of query parameters from a query string.
        const urlParams = new URLSearchParams(queryString);

        // Get the value of the 'encryptedUsername' query parameter
        const paramValue = urlParams.get('encryptedUsername');

        // URL for the POST request
        const bobo = 'PassLogin';

        // Data to be sent in the POST request body
        const data = {
            password_salt: paramValue,
            user_password: password
        };

        // Send the POST request using the fetch API
        fetch(bobo, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
            .then(response => {
                if (response.redirected) {
                    // Redirect to the URL returned by the action
                    window.location.href = response.url;
                } else {
                    // Handle other responses or errors
                    return response.json();
                }
            })
            .then(responseText => {
                // Handle the response from the server
                console.log('Server Response:', responseText);
            })
            .catch(error => {
                console.error('Error:', error);
            });
    };
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

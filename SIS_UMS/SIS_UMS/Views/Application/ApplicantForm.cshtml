@model SIS_UMS.Models.ApplicationViewModel

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    
    
    <form action="@Url.Action("EducationInfoStep", "Application")" method="post">
        <div class="step" id="step1">
            <h2>Student Application - Personal Information</h2>
            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="first_name">First Name</label>
                        <input asp-for="@Model.user.first_name" type="text" class="form-control" id="first_name" name="first_name" required>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="middle_name">Middle Name</label>
                        <input asp-for="@Model.user.middle_name" type="text" class="form-control" id="middle_name" name="middle_name" required>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="last_name">Last Name</label>
                        <input asp-for="@Model.user.last_name" type="text" class="form-control" id="last_name" name="last_name" required>
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="personal_email">Personal Email</label>
                        <input asp-for="@Model.user.personal_email" type="email" class="form-control" id="personal_email" name="personal_email" required>
                        <small class="text-danger" id="email_error" style="display: none;">Please enter a valid email address!</small>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="gender">Gender</label>
                        <select asp-for="@Model.user.gender" class="form-control" id="gender" name="gender" required>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="date_of_birth">Date of Birth</label>
                        <input asp-for="@Model.user.date_of_birth" type="date" class="form-control" id="date_of_birth" name="date_of_birth" value="dd/mm/yyyy" required>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="mother_name">Mother's Full Name</label>
                        <input asp-for="@Model.user.mother_name" type="text" class="form-control" id="mother_name" name="mother_name" required>
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="marital_status">Marital Status</label>
                        <select asp-for="@Model.user.marital_status" class="form-control" id="marital_status" name="marital_status">
                            <option value="Single">Single</option>
                            <option value="Married">Married</option>
                            <option value="Divorced">Divorced</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="children_count">Number of Children</label>
                        <input asp-for="@Model.user.children_count" type="number" class="form-control" id="children_count" name="children_count" value="0" min="0" required>
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="nationality">Nationality</label>
                        <input asp-for="@Model.user.nationality" type="text" class="form-control" id="nationality" name="nationality" required>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="place_of_birth">Place of Birth</label>
                        <input asp-for="@Model.user.place_of_birth" type="text" class="form-control" id="place_of_birth" name="place_of_birth" required>
                    </div>
                </div>

            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="blood_type">Blood Type</label>
                        <select asp-for="@Model.user.blood_type" class="form-control" id="blood_type" name="blood_type" required>
                            <option value="A+">A+</option>
                            <option value="A-">A-</option>
                            <option value="B+">B+</option>
                            <option value="B-">B-</option>
                            <option value="AB+">AB+</option>
                            <option value="AB-">AB-</option>
                            <option value="O+">O+</option>
                            <option value="O-">O-</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="family_registration">Family Registration (رقم القيد)</label>
                        <input asp-for="@Model.user.family_registration" type="text" class="form-control" id="family_registration" name="family_registration" required>
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Are you socially secured?</label><br>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="socially_secured" id="socially_secured_yes" value="yes">
                            <label class="form-check-label" for="socially_secured_yes">Yes</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="socially_secured" id="socially_secured_no" value="no">
                            <label class="form-check-label" for="socially_secured_no">No</label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group mb-4" id="social_security_type" style="display: none;">
                <label>Choose Social Security Type</label><br>
                <div class="form-check form-check-inline">
                    <input asp-for="@Model.user.social_security_type" class="form-check-input" type="radio" name="social_security_type" id="ss_type1" value="الضمان الأجتماعي">
                    <label class="form-check-label" for="ss_type1">الضمان الأجتماعي</label>
                </div>
                <div class="form-check form-check-inline">
                    <input asp-for="@Model.user.social_security_type" class="form-check-input" type="radio" name="social_security_type" id="ss_type2" value="أنظمة القوى الأمنية">
                    <label class="form-check-label" for="ss_type2">أنظمة القوى الأمنية</label>
                </div>
                <div class="form-check form-check-inline">
                    <input asp-for="@Model.user.social_security_type" class="form-check-input" type="radio" name="social_security_type" id="ss_type3" value="تعاونية موظّفي الدولة">
                    <label class="form-check-label" for="ss_type3">تعاونية موظّفي الدولة</label>
                </div>
                <div class="form-check form-check-inline">
                    <input asp-for="@Model.user.social_security_type" class="form-check-input" type="radio" name="social_security_type" id="ss_type4" value="صندوق التعاضد الجامعة اللبنانيّة">
                    <label class="form-check-label" for="ss_type4">صندوق التعاضد الجامعة اللبنانيّة</label>
                </div>
                <div class="form-check form-check-inline">
                    <input asp-for="@Model.user.social_security_type" class="form-check-input" type="radio" name="social_security_type" id="ss_type5" value="صندوق تعاضد القضاة">
                    <label class="form-check-label" for="ss_type5">صندوق تعاضد القضاة</label>
                </div>
                <div class="form-check form-check-inline">
                    <input asp-for="@Model.user.social_security_type" class="form-check-input" type="radio" name="social_security_type" id="ss_type6" value="البلديات">
                    <label class="form-check-label" for="ss_type6">البلديات</label>
                </div>
            </div>
            <div class="form-group mb-4" id="ssnField" style="display: none;">
                <label for="ssn">Social Security Number</label>
                <input asp-for="@Model.user.ssn" type="text" class="form-control" id="ssn" name="ssn">
            </div>

            <div id="step1_error" class="error_message" style="display:none;">
                <p>Required fields are missing!</p>
            </div>

        </div>

        <div class="step" id="step2" style="display: none;">
            <h2>Student Application - Contact Information</h2>
            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="phone_number">Phone Number</label>
                        <input asp-for="@Model.PersonalPhoneNumber.PhoneNumber" type="tel" class="form-control" id="phone_number" name="phone_number" required>
                        <small class="error_message" id="phone_error" style="display:none;">Invalid Phone Format!</small>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="emergency_contact_name">Emergency Contact Name</label>
                        <input asp-for="@Model.user.emergency_contact_name" type="text" class="form-control" id="emergency_contact_name" name="emergency_contact_name" required>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="emergency_phone_number">Emergency Phone Number</label>
                        <input asp-for="@Model.EmergencyPhoneNumber.PhoneNumber" type="tel" class="form-control" id="emergency_phone_number" name="emergency_phone_number" required>
                        <small class="error_message" id="er_phone_error" style="display:none;">Invalid Phone Format!</small>
                    </div>
                </div>
            </div>
            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="city">City</label>
                        <input asp-for="@Model.user.city" type="text" class="form-control" id="city" name="city" required>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="area">Area</label>
                        <input asp-for="@Model.user.area" type="text" class="form-control" id="area" name="area" required>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="street">Street</label>
                        <input asp-for="@Model.user.street" type="text" class="form-control" id="street" name="street" required>
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="nearby">Nearby</label>
                        <input asp-for="@Model.user.near_by" type="text" class="form-control" id="nearby" name="nearby" required>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="building">Building</label>
                        <input asp-for="@Model.user.building" type="text" class="form-control" id="building" name="building" required>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="floor">Floor</label>
                        <input asp-for="@Model.user.floor" type="number" class="form-control" id="floor" name="floor" min="0" required>
                    </div>
                </div>
            </div>

            <div id="step2_error" class="error_message" style="display:none;">
                <p>Required fields are missing!</p>
            </div>

        </div>

        <div class="step" id="step3" style="display: none;">
            <h2>Student Application - Academic Information</h2>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="semester">Semester You Are Applying For:</label>
                        <select class="form-control" id="semester" name="semester" required>
                            <option value="">Select the semester</option>
                            @{
                                if (Model != null) {
                                    foreach (var obj in Model.semesters)
                                    {
                                        <option value="@obj.SemesterId">@obj.SemesterName</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="campus">Campus:</label>
                        <select class="form-control" id="campus" name="campus" required>
                            <option value="">Select The Campus</option>
                            @{
                                if (Model != null)
                                {
                                    foreach (var obj in Model.campuses)
                                    {
                                        <option value="@obj.CampusId">@obj.CampusName</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="faculty">Faculty:</label>
                        <select class="form-control" id="faculty" name="faculty" required>
                            <option value="">Select The Faculty</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="department">Department:</label>
                        <select class="form-control" id="department" name="department" required>
                            <option value="">Select The Department</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="major">Major:</label>
                        <select class="form-control" id="major" name="major" required>
                            <option value="">Select The Major</option>
                        </select>
                    </div>
                </div>
            </div>
          
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label>Student Status</label><br>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="student_status" id="new_student" value="New Student">
                            <label class="form-check-label" for="new_student">New Student</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="student_status" id="university_transferred" value="University Transferred">
                            <label class="form-check-label" for="university_transferred">University Transferred</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="student_status" id="vocational_transferred" value="Vocational Transferred">
                            <label class="form-check-label" for="vocational_transferred">Vocational Transferred</label>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group" id="instituteField" style="display: none;">
                        <label for="institute">Specify Institute</label>
                        <input type="text" class="form-control" id="institute" name="institute" placeholder="Specify">
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="school_name">Name of School Attended:</label>
                        <input type="text" class="form-control" id="school_name" name="school_name" required>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="start_year">Year Started:</label>
                        <select class="form-control" id="start_year" name="start_year" required>
                            <option value="">Select Year</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="end_year">Year Finished:</label>
                        <select class="form-control" id="end_year" name="end_year" required>
                            <option value="">Select Year</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="row mb-3">

                <div class="col-md-3">
                    <div class="form-group">
                        <label for="certificate_type">Certificate Type:</label>
                        <select class="form-control" id="certificate_type" name="certificate_type" required>
                            <option value="">Select Certificate Type</option>
                            <option value="Academic">Academic</option>
                            <option value="Vocational">Vocational</option>
                        </select>
                    </div>
                </div>

                <div class="col-md-3" id="academic_certificate_fields" style="display: none;">
                    <div class="form-group">
                        <label for="academic_certificate">Academic Certificate:</label>
                        <select class="form-control" id="academic_certificate" name="academic_certificate" required>
                            <option value="">Select Academic Certificate</option>
                            <option value="LS">LS</option>
                            <option value="GS">GS</option>
                            <option value="LH">LH</option>
                            <option value="SE">SE</option>
                            <option value="HS">HS</option>
                        </select>
                    </div>
                </div>

                <div class="col-md-3" id="vocational_certificate_fields" style="display: none;">
                    <div class="form-group">
                        <label for="vocational_certificate">Vocational Certificate:</label>
                        <select class="form-control" id="vocational_certificate" name="vocational_certificate" required>
                            <option value="">Select Vocational Certificate</option>
                            <option value="BT">BT</option>
                            <option value="TS">TS</option>
                            <option value="LT">LT</option>
                        </select>
                    </div>
                </div>

                <div class="col-md-3" id="certificate_fields" style="display: none;">
                    <div class="form-group">
                        <label for="certificate">Certificate:</label>
                        <select class="form-control" id="certificate" name="certificate" required>
                            <option value="">Select Certificate</option>
                        </select>
                    </div>
                </div>

                <div class="col-md-3" id="graduation_date" style="display: none;">
                    <div class="form-group">
                        <label for="graduation_date" >Date of Graduation:</label>
                        <input type="date" class="form-control" id="graduation_date" name="graduation_date">
                    </div>
                </div>

            </div>

            <div id="step3_error" class="error_message" style="display:none;">
                <p>Required fields are missing!</p>
            </div>

        </div>

        <div class="step" id="step4" style="display:none;">
            <h2>Student Application - Languages</h2>

            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Arabic Level:</label><br>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="arabic_level" id="arabic_level_very_good" value="Very Good">
                            <label class="form-check-label" for="arabic_level_very_good">Very Good</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="arabic_level" id="arabic_level_good" value="Good">
                            <label class="form-check-label" for="arabic_level_good">Good</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="arabic_level" id="arabic_level_fair" value="Fair">
                            <label class="form-check-label" for="arabic_level_fair">Fair</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="arabic_level" id="arabic_level_weak" value="Weak">
                            <label class="form-check-label" for="arabic_level_weak">Weak</label>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        <label>English Level:</label><br>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="english_level" id="english_level_very_good" value="Very Good">
                            <label class="form-check-label" for="english_level_very_good">Very Good</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="english_level" id="english_level_good" value="Good">
                            <label class="form-check-label" for="english_level_good">Good</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="english_level" id="english_level_fair" value="Fair">
                            <label class="form-check-label" for="english_level_fair">Fair</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="english_level" id="english_level_weak" value="Weak">
                            <label class="form-check-label" for="english_level_weak">Weak</label>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        <label>French Level:</label><br>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="french_level" id="french_level_very_good" value="Very Good">
                            <label class="form-check-label" for="french_level_very_good">Very Good</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="french_level" id="french_level_good" value="Good">
                            <label class="form-check-label" for="french_level_good">Good</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="french_level" id="french_level_fair" value="Fair">
                            <label class="form-check-label" for="french_level_fair">Fair</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="french_level" id="french_level_weak" value="Weak">
                            <label class="form-check-label" for="french_level_weak">Weak</label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>English Language Certificate:</label><br>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="english_certificate" id="english_certificate_TOFEL" value="TOFEL">
                            <label class="form-check-label" for="english_certificate_TOFEL">TOFEL</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="english_certificate" id="english_certificate_IELTS" value="IELTS">
                            <label class="form-check-label" for="english_certificate_IELTS">IELTS</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="english_certificate" id="english_certificate_other" value="Other">
                            <label class="form-check-label" for="english_certificate_other">Other</label>
                        </div>
                        <input type="text" class="form-control" id="english_certificate_name" name="english_certificate_name" placeholder="Specify Certificate" style="display: none;">
                        <div class="form-group mt-3">
                            <label for="english_certificate_date">Date Taken:</label>
                            <input type="date" class="form-control" id="english_certificate_date" name="english_certificate_date">
                        </div>
                        <div class="form-group mt-3">
                            <label for="english_certificate_score">Score:</label>
                            <input type="number" class="form-control" id="english_certificate_score" name="english_certificate_score" placeholder="Enter Score">
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <label>French Language Certificate:</label><br>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="french_certificate" id="french_certificate_DELF" value="DELF">
                            <label class="form-check-label" for="french_certificate_DELF">DELF</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="french_certificate" id="french_certificate_DALF" value="DALF">
                            <label class="form-check-label" for="french_certificate_DALF">DALF</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="french_certificate" id="french_certificate_other" value="Other">
                            <label class="form-check-label" for="french_certificate_other">Other</label>
                        </div>
                        <input type="text" class="form-control" id="french_certificate_name" name="french_certificate_name" placeholder="Specify Certificate" style="display: none;">
                        <div class="form-group mt-3">
                            <label for="french_certificate_date">Date Taken:</label>
                            <input type="date" class="form-control" id="french_certificate_date" name="french_certificate_date">
                        </div>
                        <div class="form-group mt-3">
                            <label for="french_certificate_score">Score:</label>
                            <input type="number" class="form-control" id="french_certificate_score" name="french_certificate_score" placeholder="Enter Score">
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-12">
                    <div class="form-group">
                        <label for="additional_languages">Additional Languages:</label>
                        <textarea class="form-control" id="additional_languages" name="additional_languages" rows="4"></textarea>
                    </div>
                </div>
            </div>

        </div>

        <div class="step" id="step5" style="display:none;">
            <h2>Student Application - Other Information</h2>

            <div class="row mb-3">
                <div class="form-group">
                    <label for="hobbies_interests">Hobbies and Interests:</label><br>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" id="arts" name="hobbies_interests[]" value="Arts">
                        <label class="form-check-label" for="arts">Arts</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" id="sports" name="hobbies_interests[]" value="Sports">
                        <label class="form-check-label" for="sports">Sports</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" id="culture" name="hobbies_interests[]" value="Culture">
                        <label class="form-check-label" for="culture">Culture</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" id="social_work" name="hobbies_interests[]" value="Social Work">
                        <label class="form-check-label" for="social_work">Social Work</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" id="other_interest" name="hobbies_interests[]" value="Other">
                        <label class="form-check-label" for="other_interest">Other</label>
                    </div>
                </div>

                <div class="form-group" id="other_interest_field" style="display: none;">
                    <label for="other_interest_text">Specify Other Interest:</label>
                    <input type="text" class="form-control" id="other_interest_text" name="other_interest_text">
                </div>
            </div>

            <div class="row mb-3">
                <div class="form-group">
                    <label>Physical Problems</label><br>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="physical_disability[]" value="Sensory Disability">
                        <label class="form-check-label" for="sensory_disability">Sensory Disability</label>
                    </div>
                    <input type="text" class="form-control" id="sensory_disability_specify" name="sensory_disability_specify" placeholder="Specify Disability" style="display: none;">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="physical_disability[]" value="Physical Disability">
                        <label class="form-check-label" for="physical_disability">Physical Disability</label>
                    </div>
                    <input type="text" class="form-control" id="physical_disability_specify" name="physical_disability_specify" placeholder="Specify Disability" style="display: none;">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="physical_disability[]" value="Other" id="physical_disability_other_checkbox">
                        <label class="form-check-label" for="physical_disability_other_checkbox">Other</label>
                    </div>
                    <input type="text" class="form-control" id="disability_other_specify" name="disability_other_specify" placeholder="Specify Disability" style="display: none;">
                </div>
            </div>

        </div>

    </form>

    <div class="fixed-navigation">
        <button type="button" class="btn btn-primary" id="prevStep">Previous</button>
        <button type="button" class="btn btn-primary" id="nextStep">Next</button>
    </div>

</div>

<!-- Include Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


<script>
    //Function to track changes to the socially secured radio buttons and updating fields according to those changes
    document.addEventListener("DOMContentLoaded", function () {
        const sociallySecuredRadios = document.querySelectorAll('input[name="socially_secured"]');
        const ssnField = document.getElementById('ssnField');
        const socialSecurityType = document.getElementById('social_security_type');

        sociallySecuredRadios.forEach(radio => {
            radio.addEventListener("change", function () {
                if (this.value === 'yes') {
                    ssnField.style.display = "block";
                    socialSecurityType.style.display = "block";
                } else {
                    ssnField.style.display = "none";
                    socialSecurityType.style.display = "none";
                    document.querySelector('input[name="social_security_type"]:checked').checked = false;
                    document.getElementById('ssn').value = '';
                }
            });
        });
    });
</script>

<script>
    //Functionality to track changes to the student status radio buttons and updating inputs accoeding to those changes
    const universityTransferredRadio = document.getElementById("university_transferred");
    const vocationalTransferredRadio = document.getElementById("vocational_transferred");
    const newStudentRadio = document.getElementById("new_student");
    const instituteField = document.getElementById("instituteField");

    universityTransferredRadio.addEventListener("change", () => {
        instituteField.style.display = universityTransferredRadio.checked ? "block" : "none";
    });

    vocationalTransferredRadio.addEventListener("change", () => {
        instituteField.style.display = vocationalTransferredRadio.checked ? "block" : "none";
    });

    newStudentRadio.addEventListener("change", () => {
        if (newStudentRadio.checked) {
            instituteField.style.display = "none";
            instituteField.querySelector("input").value = "";
        }
    });
</script>

<script>
    // Function to handle the steps of the application going through each step
    document.addEventListener("DOMContentLoaded", function () {
        // getting the total steps in the application
        const steps = document.querySelectorAll('.step');
        let currentStep = 0;

        //functions that shows the current step
        function showStep(stepIndex) {
            steps.forEach((step, index) => {
                step.style.display = index === stepIndex ? 'block' : 'none';
            });
        }

        //function to handle the visibility of next and previous button
        function updateButtonVisibility() {
            const nextStepBtn = document.getElementById('nextStep');
            const prevStepBtn = document.getElementById('prevStep');

            if (currentStep === 0) {
                prevStepBtn.style.display = 'none';
            } else {
                prevStepBtn.style.display = 'inline';
            }

            if (currentStep === steps.length - 1) {
                nextStepBtn.style.display = 'none';
            } else {
                nextStepBtn.style.display = 'inline';
            }
        }

        //function to handle showing the next step according to validations function
        function nextStep() {
            console.log("Entered Next Step!");
            if (validateStep(currentStep)) {
                if (currentStep < steps.length - 1) {
                    currentStep++;
                    showStep(currentStep);
                    updateButtonVisibility();
                }
            }
        }

        //Function to handle showing the previous step in case user needs to check info
        function prevStep() {
            if (currentStep > 0) {
                currentStep--;
                showStep(currentStep);
            }
        }

        //Handling the click of the next button
        const nextStepBtn = document.getElementById('nextStep');
        nextStepBtn.addEventListener('click', function () {
            nextStep();
            updateButtonVisibility();
        });

        //Handling the click of the previous button
        const prevStepBtn = document.getElementById('prevStep');
        prevStepBtn.addEventListener('click', function () {
            prevStep();
            updateButtonVisibility();
        });

        updateButtonVisibility();
    });
</script>

<script>
    //Function for populating the year select input
    function populateYearSelect(selectId) {
        const select = document.getElementById(selectId);
        const currentYear = new Date().getFullYear();
        for (let year = 1980; year <= currentYear; year++) {
            const option = document.createElement("option");
            option.value = year;
            option.textContent = year;
            select.appendChild(option);
        }
    }

    //populting the select inputs of years
    populateYearSelect("start_year");
    populateYearSelect("end_year");

    //Handling the educational certificates input according to user choice
    const certificateTypeSelect = document.getElementById("certificate_type");
    const academicCertificateFields = document.getElementById("academic_certificate_fields");
    const vocationalCertificateField = document.getElementById("vocational_certificate_fields");
    const vocationalCertificateChoice = document.getElementById("certificate_fields");
    const GraduationDate = document.getElementById("graduation_date");

    certificateTypeSelect.addEventListener("change", function () {
        if (certificateTypeSelect.value === "Academic") {
            academicCertificateFields.style.display = "block";
            vocationalCertificateField.style.display = "none";
            vocationalCertificateChoice.style.display = "none";
            GraduationDate.style.display = "block";
            vocationalCertificateField.querySelector("select").selectedIndex = 0;
            vocationalCertificateChoice.querySelector("select").selectedIndex = 0;
        } else if (certificateTypeSelect.value === "Vocational") {
            academicCertificateFields.style.display = "none";
            vocationalCertificateField.style.display = "block";
            vocationalCertificateChoice.style.display = "block";
            GraduationDate.style.display = "block";
            academicCertificateFields.querySelector("select").selectedIndex = 0;
        } else {
            academicCertificateFields.style.display = "none";
            vocationalCertificateField.style.display = "none";
            vocationalCertificateChoice.style.display = "none";
            GraduationDate.style.display = "none";
            academicCertificateFields.querySelector("select").selectedIndex = 0;
            vocationalCertificateField.querySelector("select").selectedIndex = 0;
            vocationalCertificateChoice.querySelector("select").selectedIndex = 0;
            GraduationDate.querySelector("input").value = null;
        }
    });
</script>

<script>
    //Handling language certificate inputs according to user choices
    const EnglishCertificateRadios = document.querySelectorAll('input[name="english_certificate"]');
    const FrenchCertificateRadios = document.querySelectorAll('input[name="french_certificate"]');
    const EnglishCertificateNameField = document.getElementById("english_certificate_name");
    const FrenchCertificateNameField = document.getElementById("french_certificate_name");

    EnglishCertificateRadios.forEach(radio => {
        radio.addEventListener("change", function(){
            if(this.value === "Other"){
                EnglishCertificateNameField.style.display = "block";
            }else{
                EnglishCertificateNameField.style.display = "none";
                EnglishCertificateNameField.value = ""; 
            }
        })
    });

    FrenchCertificateRadios.forEach(radio => {
        radio.addEventListener("change", function () {
            if (this.value === "Other") {
                FrenchCertificateNameField.style.display = "block";
            } else {
                FrenchCertificateNameField.style.display = "none";
                FrenchCertificateNameField.value = "";
            }
        })
    });
</script>

<script>
    //Handling Other Information inputs according to user choices
    const otherInterestCheckbox = document.getElementById("other_interest");
    const otherInterestField = document.getElementById("other_interest_field");

    otherInterestCheckbox.addEventListener("change", () => {
        otherInterestField.style.display = otherInterestCheckbox.checked ? "block" : "none";
    });


    const sensoryDisabilityCheckbox = document.querySelector('input[name="physical_disability[]"][value="Sensory Disability"]');
    const sensoryDisabilityInput = document.getElementById("sensory_disability_specify");

    const physicalDisabilityCheckbox = document.querySelector('input[name="physical_disability[]"][value="Physical Disability"]');
    const physicalDisabilityInput = document.getElementById("physical_disability_specify");

    const otherDisabilityCheckbox = document.getElementById("physical_disability_other_checkbox");
    const otherDisabilityInput = document.getElementById("disability_other_specify");

    sensoryDisabilityCheckbox.addEventListener("change", () => {
        sensoryDisabilityInput.style.display = sensoryDisabilityCheckbox.checked ? "block" : "none";
    });

    physicalDisabilityCheckbox.addEventListener("change", () => {
        physicalDisabilityInput.style.display = physicalDisabilityCheckbox.checked ? "block" : "none";
    });

    otherDisabilityCheckbox.addEventListener("change", () => {
        otherDisabilityInput.style.display = otherDisabilityCheckbox.checked ? "block" : "none";
    });

</script>

<script>
    // Assume facultiesData contains your faculties data, serialized from the server
    var facultiesData = @Html.Raw(Json.Serialize(Model.faculties));

    // Function to populate the faculties dropdown based on the selected campus
    function populateFacultiesDropdown(selectedCampusId) {
        $('#faculty').empty();
        // Filter faculties based on the selected campusId
        var filteredFaculties = facultiesData.filter(function (faculty) {
            return faculty.campusId === selectedCampusId;
        });

        // Log the filtered faculties (for debugging)
        console.log(filteredFaculties);

        // Populate the faculties dropdown with filtered faculties
        if (filteredFaculties.length === 0) {
            $('#faculty').append($('<option>', {
                value: '',
                text: 'Select The Faculty'
            }));
        } else {
            $('#faculty').append($('<option>', {
                value: '',
                text: 'Select The Faculty'
            }));
            filteredFaculties.forEach(function (faculty) {
                $('#faculty').append($('<option>', {
                    value: faculty.facultyId,
                    text: faculty.facultyName
                }));
            });
        }
    }

    // Event handler for the campus dropdown change event
    $('#campus').on('change', function () {
        // Get the selected campus ID as an integer
        var selectedCampusId = parseInt($(this).val(), 10);

        // Log the selected campus ID (for debugging)
        console.log(selectedCampusId);

        // Call the function to populate the faculties dropdown
        populateFacultiesDropdown(selectedCampusId);
        populateDepartmentsDropdown(-1);
        populateMajorsDropdown(-1);
    });
</script>

<script>
    // Assume departmentsData contains your departments data, serialized from the server
    var DepartmentsData = @Html.Raw(Json.Serialize(Model.departments));

    // Function to populate the departments dropdown based on the selected faculty
    function populateDepartmentsDropdown(selectedFacultyId) {
        $('#department').empty();
        // Filter faculties based on the selected facultyId
        var filteredDepartments = DepartmentsData.filter(function (department) {
            return department.facultyId === selectedFacultyId;
        });

        // Log the filtered departments (for debugging)
        console.log(filteredDepartments);

        // Populate the departments dropdown with filtered departments
        if (filteredDepartments.length === 0) {
            $('#department').append($('<option>', {
                value: '',
                text: 'Select Department'
            }));
        } else {
            $('#department').append($('<option>', {
                value: '',
                text: 'Select Department'
            }));
            filteredDepartments.forEach(function (department) {
                $('#department').append($('<option>', {
                    value: department.departmentId,
                    text: department.departmentName
                }));
            });
        }
    }

    // Event handler for the faculty dropdown change event
    $('#faculty').on('change', function () {
        // Get the selected faculty ID as an integer
        var selectedFacultyId = parseInt($(this).val(), 10);

        // Log the selected faculty ID (for debugging)
        console.log(selectedFacultyId);

        // Call the function to populate the departments dropdown
        populateDepartmentsDropdown(selectedFacultyId);
        populateMajorsDropdown(-1);
    });
</script>

<script>
    // Assume majorsData contains your majors data, serialized from the server
    var majorsData = @Html.Raw(Json.Serialize(Model.majors));

    // Function to populate the majors dropdown based on the selected department
    function populateMajorsDropdown(selectedDepartmentId) {
        $('#major').empty();
        // Filter majors based on the selected facultyId
        var filteredmajors = majorsData.filter(function (major) {
            return major.departmentId === selectedDepartmentId;
        });

        // Log the filtered majors (for debugging)
        console.log(filteredmajors);

        // Populate the majors dropdown with filtered majors
        if (filteredmajors.length === 0) {
            $('#major').append($('<option>', {
                value: '',
                text: 'Select The Major'
            }));
        } else {
            $('#major').append($('<option>', {
                value: '',
                text: 'Select The Major'
            }));
            filteredmajors.forEach(function (major) {
                $('#major').append($('<option>', {
                    value: major.majorId,
                    text: major.majorName
                }));
            });
        }
    }

    // Event handler for the department dropdown change event
    $('#department').on('change', function () {
        // Get the selected department ID as an integer
        var selectedDepartmentId = parseInt($(this).val(), 10);

        // Log the selected department ID (for debugging)
        console.log(selectedDepartmentId);

        // Call the function to populate the majors dropdown
        populateMajorsDropdown(selectedDepartmentId);
    });
</script> 

<script>
    // Validation functions for each step of the application
    function validateStep(stepIndex) {

        let isValid = true;

        function validateField(field) {
            if (!field.value.trim()) {
                field.classList.add('error'); // Add a CSS class for highlighting
                isValid = false;
            } else {
                field.classList.remove('error');
            }
        }

        function validatePhoneNumber(PhoneNumber,divoferror){
            const phoneFormat = /^961\d{8}$/;
            inputvalue = PhoneNumber.value;
            if (!phoneFormat.test(inputvalue)) {
                PhoneNumber.classList.add('error');
                isValid = false;
                divoferror.style.display = 'block';
            } else {
                divoferror.style.display = 'none';
                PhoneNumber.classList.remove('error');
            }
        }


        if(stepIndex === 0){
            //Retrieving the elements that need validation in first step
            const firstName = document.getElementById('first_name');
            const middleName = document.getElementById('middle_name');
            const lastName = document.getElementById('last_name');
            const personalEmail = document.getElementById('personal_email');
            const Gender = document.getElementById('gender');
            const motherName = document.getElementById('mother_name');
            const martialStatus = document.getElementById('marital_status');
            const nationality = document.getElementById('nationality');
            const placeOfBirth = document.getElementById('place_of_birth');
            const bloodType = document.getElementById('blood_type');
            const familyRegistration = document.getElementById('family_registration');
            const sociallySecuredYes = document.getElementById('socially_secured_yes');
            const sociallySecuredNo = document.getElementById('socially_secured_no');
            const socialSecurityRadios = document.querySelectorAll('input[name="social_security_type"]');
            const errorDiv = document.getElementById('step1_error');
            const emailError = document.getElementById('email_error');


            //Validate each field
            validateField(firstName);
            validateField(middleName);
            validateField(lastName);
            validateField(motherName);
            validateField(nationality);
            validateField(placeOfBirth);
            validateField(familyRegistration);

            //Checking the email format entered by the user
            const emailRegex = /^[A-Za-z0-9._%+\-]+@@[A-Za-z0-9.\-]+\.[A-Za-z]{2,}$/; 
            if (!emailRegex.test(personalEmail.value.trim())) {
                personalEmail.classList.add('error');
                emailError.style.display = 'block';
                isValid = false;
            }else{
                personalEmail.classList.remove('error');
                emailError.style.display = "none";
            }

            let isSocialSecurityChecked = false;

            //Checking if socially secured question is answered
            if(!sociallySecuredYes.checked && !sociallySecuredNo.checked){
                isValid = false;
            }

            //Check if "Yes" is selected for "Are you socially secured?"
            if (sociallySecuredYes.checked) {
                // Iterate through the social security radio buttons
                socialSecurityRadios.forEach(function (radio) {
                    if (radio.checked) {
                        isSocialSecurityChecked = true;
                    }
                });
            }

            // Handle the case where the user chose "Yes" but didn't select a social security option
            if (sociallySecuredYes.checked && !isSocialSecurityChecked) {
                isValid = false;
            }

            //Display error message if needed
            if(!isValid) {
                errorDiv.style.display = 'block';
            } else {
                errorDiv.style.display = 'none';
            }

            return isValid;
        }


        if(stepIndex === 1){
            //Retrieving the elements that need validation in second step
            const PhoneNumber = document.getElementById('phone_number');
            const EmergencyContactName = document.getElementById('emergency_contact_name');
            const EmergencyPhoneNumber = document.getElementById('emergency_phone_number');
            const City = document.getElementById('city');
            const Area = document.getElementById('area');
            const Street = document.getElementById('street');
            const Nearby = document.getElementById('nearby');
            const Building = document.getElementById('building');
            const Floor = document.getElementById('floor');
            const PhoneError = document.getElementById('phone_error');
            const ERPhoneError = document.getElementById('er_phone_error');
            const errorDiv = document.getElementById('step2_error');

            //Validating each input checking if empty
            validateField(PhoneNumber);
            validateField(EmergencyContactName);
            validateField(EmergencyPhoneNumber);
            validateField(City);
            validateField(Area);
            validateField(Street);
            validateField(Nearby);
            validateField(Building);
            validateField(Floor);

            //Validating the Phone Format the user entered
            validatePhoneNumber(PhoneNumber, PhoneError);
            validatePhoneNumber(EmergencyPhoneNumber,ERPhoneError);

            return isValid;
        }


        //if(stepindex == 3){

        //}

    }
</script>
<style>
    /* CSS for validation error */
    .error {
        border: 1px solid #dc3545; /* Red border color */
    }

    /* Optional: You can also add additional styling for error messages */
    .error_message {
        color: #dc3545; /* Red text color */
        font-size: 14px; /* Adjust font size as needed */
    }

</style>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}